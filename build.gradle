// Top-level build file where you can add configuration options common to all sub-projects/modules.

/**
 * “buildscript”配置部分用于 gradle 本身（即更改 gradle 执行构建的方式）。
 * 所以这个部分通常会包含 Android Gradle 插件。
 */
// buildscript里是gradle脚本执行所需依赖，分别是对应的maven库和插件
buildscript {
    // 下载插件时使用的库
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/google/'
            name 'aliyun-google'
        }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        google()
    }
    // 依赖的插件
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.4'
        // bintray-release是帮助将类库推送到bintray的助手
        // classpath 'com.novoda:bintray-release:0.4.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

/**
 * “allprojects”部分用于 Gradle 构建的模块。
 * 通常allprojects与buildscript两者的存储库部分是相同的，因为两者通常都会从 jcenter（或者可能是 maven Central）
 * 获取它们的依赖项，但是“依赖项”部分会有所不同。
 * 通常，“allprojects”的“依赖项”部分是空的，因为每个模块的依赖项都是唯一的，并且将位于每个模块内的
 * “build.gradle”文件中。 但是，如果所有模块都共享相同的依赖项，那么它们可以在此处列出。
 */
// allprojects里是项目本身需要的依赖。比如我们项目中要使用的很多第三方依赖，RxJava、
// Glide等这些都需要从资源库中下载，资源库都需要在repositories中配置，常用的资源库有：阿里云、mavenLocal()、
// mavenCentral()、google()等，
allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/google/'
            name 'aliyun-google'
        }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
